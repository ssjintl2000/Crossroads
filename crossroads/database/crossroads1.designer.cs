#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crossroads.database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_A3B8A7_SSJ")]
	public partial class crossroadsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChurch(Church instance);
    partial void UpdateChurch(Church instance);
    partial void DeleteChurch(Church instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceSong(ServiceSong instance);
    partial void UpdateServiceSong(ServiceSong instance);
    partial void DeleteServiceSong(ServiceSong instance);
    partial void InsertServiceUnavailable(ServiceUnavailable instance);
    partial void UpdateServiceUnavailable(ServiceUnavailable instance);
    partial void DeleteServiceUnavailable(ServiceUnavailable instance);
    partial void InsertServiceUser(ServiceUser instance);
    partial void UpdateServiceUser(ServiceUser instance);
    partial void DeleteServiceUser(ServiceUser instance);
    partial void InsertSong(Song instance);
    partial void UpdateSong(Song instance);
    partial void DeleteSong(Song instance);
    partial void InsertSongsWishList(SongsWishList instance);
    partial void UpdateSongsWishList(SongsWishList instance);
    partial void DeleteSongsWishList(SongsWishList instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public crossroadsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_A3B8A7_SSJConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public crossroadsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public crossroadsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public crossroadsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public crossroadsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Church> Churches
		{
			get
			{
				return this.GetTable<Church>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSong> ServiceSongs
		{
			get
			{
				return this.GetTable<ServiceSong>();
			}
		}
		
		public System.Data.Linq.Table<ServiceUnavailable> ServiceUnavailables
		{
			get
			{
				return this.GetTable<ServiceUnavailable>();
			}
		}
		
		public System.Data.Linq.Table<ServiceUser> ServiceUsers
		{
			get
			{
				return this.GetTable<ServiceUser>();
			}
		}
		
		public System.Data.Linq.Table<Song> Songs
		{
			get
			{
				return this.GetTable<Song>();
			}
		}
		
		public System.Data.Linq.Table<SongsWishList> SongsWishLists
		{
			get
			{
				return this.GetTable<SongsWishList>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Churches")]
	public partial class Church : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CName;
		
		private string _CAddress;
		
		private string _CCity;
		
		private string _CState;
		
		private string _CZipCode;
		
		private string _CPhone;
		
		private string _CWebsite;
		
		private string _PTName;
		
		private string _Logo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnCAddressChanging(string value);
    partial void OnCAddressChanged();
    partial void OnCCityChanging(string value);
    partial void OnCCityChanged();
    partial void OnCStateChanging(string value);
    partial void OnCStateChanged();
    partial void OnCZipCodeChanging(string value);
    partial void OnCZipCodeChanged();
    partial void OnCPhoneChanging(string value);
    partial void OnCPhoneChanged();
    partial void OnCWebsiteChanging(string value);
    partial void OnCWebsiteChanged();
    partial void OnPTNameChanging(string value);
    partial void OnPTNameChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public Church()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CName
		{
			get
			{
				return this._CName;
			}
			set
			{
				if ((this._CName != value))
				{
					this.OnCNameChanging(value);
					this.SendPropertyChanging();
					this._CName = value;
					this.SendPropertyChanged("CName");
					this.OnCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CAddress
		{
			get
			{
				return this._CAddress;
			}
			set
			{
				if ((this._CAddress != value))
				{
					this.OnCAddressChanging(value);
					this.SendPropertyChanging();
					this._CAddress = value;
					this.SendPropertyChanged("CAddress");
					this.OnCAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CCity
		{
			get
			{
				return this._CCity;
			}
			set
			{
				if ((this._CCity != value))
				{
					this.OnCCityChanging(value);
					this.SendPropertyChanging();
					this._CCity = value;
					this.SendPropertyChanged("CCity");
					this.OnCCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CState", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string CState
		{
			get
			{
				return this._CState;
			}
			set
			{
				if ((this._CState != value))
				{
					this.OnCStateChanging(value);
					this.SendPropertyChanging();
					this._CState = value;
					this.SendPropertyChanged("CState");
					this.OnCStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CZipCode", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CZipCode
		{
			get
			{
				return this._CZipCode;
			}
			set
			{
				if ((this._CZipCode != value))
				{
					this.OnCZipCodeChanging(value);
					this.SendPropertyChanging();
					this._CZipCode = value;
					this.SendPropertyChanged("CZipCode");
					this.OnCZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhone", DbType="VarChar(10)")]
		public string CPhone
		{
			get
			{
				return this._CPhone;
			}
			set
			{
				if ((this._CPhone != value))
				{
					this.OnCPhoneChanging(value);
					this.SendPropertyChanging();
					this._CPhone = value;
					this.SendPropertyChanged("CPhone");
					this.OnCPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWebsite", DbType="VarChar(100)")]
		public string CWebsite
		{
			get
			{
				return this._CWebsite;
			}
			set
			{
				if ((this._CWebsite != value))
				{
					this.OnCWebsiteChanging(value);
					this.SendPropertyChanging();
					this._CWebsite = value;
					this.SendPropertyChanged("CWebsite");
					this.OnCWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTName", DbType="VarChar(100)")]
		public string PTName
		{
			get
			{
				return this._PTName;
			}
			set
			{
				if ((this._PTName != value))
				{
					this.OnPTNameChanging(value);
					this.SendPropertyChanging();
					this._PTName = value;
					this.SendPropertyChanged("PTName");
					this.OnPTNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(100)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Services")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ServiceDate;
		
		private string _ServiceTitle;
		
		private string _ServiceScripture;
		
		private string _ServicePDF;
		
		private string _ServiceNotes;
		
		private bool _Baptism;
		
		private bool _Communion;
		
		private bool _Rehearsal;
		
		private int _Id;
		
		private int _ChurchId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceDateChanging(System.DateTime value);
    partial void OnServiceDateChanged();
    partial void OnServiceTitleChanging(string value);
    partial void OnServiceTitleChanged();
    partial void OnServiceScriptureChanging(string value);
    partial void OnServiceScriptureChanged();
    partial void OnServicePDFChanging(string value);
    partial void OnServicePDFChanged();
    partial void OnServiceNotesChanging(string value);
    partial void OnServiceNotesChanged();
    partial void OnBaptismChanging(bool value);
    partial void OnBaptismChanged();
    partial void OnCommunionChanging(bool value);
    partial void OnCommunionChanged();
    partial void OnRehearsalChanging(bool value);
    partial void OnRehearsalChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChurchIdChanging(int value);
    partial void OnChurchIdChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this.OnServiceDateChanging(value);
					this.SendPropertyChanging();
					this._ServiceDate = value;
					this.SendPropertyChanged("ServiceDate");
					this.OnServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTitle", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ServiceTitle
		{
			get
			{
				return this._ServiceTitle;
			}
			set
			{
				if ((this._ServiceTitle != value))
				{
					this.OnServiceTitleChanging(value);
					this.SendPropertyChanging();
					this._ServiceTitle = value;
					this.SendPropertyChanged("ServiceTitle");
					this.OnServiceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceScripture", DbType="VarChar(100)")]
		public string ServiceScripture
		{
			get
			{
				return this._ServiceScripture;
			}
			set
			{
				if ((this._ServiceScripture != value))
				{
					this.OnServiceScriptureChanging(value);
					this.SendPropertyChanging();
					this._ServiceScripture = value;
					this.SendPropertyChanged("ServiceScripture");
					this.OnServiceScriptureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePDF", DbType="VarChar(100)")]
		public string ServicePDF
		{
			get
			{
				return this._ServicePDF;
			}
			set
			{
				if ((this._ServicePDF != value))
				{
					this.OnServicePDFChanging(value);
					this.SendPropertyChanging();
					this._ServicePDF = value;
					this.SendPropertyChanged("ServicePDF");
					this.OnServicePDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceNotes", DbType="VarChar(1000)")]
		public string ServiceNotes
		{
			get
			{
				return this._ServiceNotes;
			}
			set
			{
				if ((this._ServiceNotes != value))
				{
					this.OnServiceNotesChanging(value);
					this.SendPropertyChanging();
					this._ServiceNotes = value;
					this.SendPropertyChanged("ServiceNotes");
					this.OnServiceNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Baptism", DbType="Bit NOT NULL")]
		public bool Baptism
		{
			get
			{
				return this._Baptism;
			}
			set
			{
				if ((this._Baptism != value))
				{
					this.OnBaptismChanging(value);
					this.SendPropertyChanging();
					this._Baptism = value;
					this.SendPropertyChanged("Baptism");
					this.OnBaptismChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Communion", DbType="Bit NOT NULL")]
		public bool Communion
		{
			get
			{
				return this._Communion;
			}
			set
			{
				if ((this._Communion != value))
				{
					this.OnCommunionChanging(value);
					this.SendPropertyChanging();
					this._Communion = value;
					this.SendPropertyChanged("Communion");
					this.OnCommunionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rehearsal", DbType="Bit NOT NULL")]
		public bool Rehearsal
		{
			get
			{
				return this._Rehearsal;
			}
			set
			{
				if ((this._Rehearsal != value))
				{
					this.OnRehearsalChanging(value);
					this.SendPropertyChanging();
					this._Rehearsal = value;
					this.SendPropertyChanged("Rehearsal");
					this.OnRehearsalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchId", DbType="Int NOT NULL")]
		public int ChurchId
		{
			get
			{
				return this._ChurchId;
			}
			set
			{
				if ((this._ChurchId != value))
				{
					this.OnChurchIdChanging(value);
					this.SendPropertyChanging();
					this._ChurchId = value;
					this.SendPropertyChanged("ChurchId");
					this.OnChurchIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSongs")]
	public partial class ServiceSong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceId;
		
		private int _SongId;
		
		private System.Nullable<int> _SongLeadUser;
		
		private string _SongPosition;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnSongIdChanging(int value);
    partial void OnSongIdChanged();
    partial void OnSongLeadUserChanging(System.Nullable<int> value);
    partial void OnSongLeadUserChanged();
    partial void OnSongPositionChanging(string value);
    partial void OnSongPositionChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public ServiceSong()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongId", DbType="Int NOT NULL")]
		public int SongId
		{
			get
			{
				return this._SongId;
			}
			set
			{
				if ((this._SongId != value))
				{
					this.OnSongIdChanging(value);
					this.SendPropertyChanging();
					this._SongId = value;
					this.SendPropertyChanged("SongId");
					this.OnSongIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongLeadUser", DbType="Int")]
		public System.Nullable<int> SongLeadUser
		{
			get
			{
				return this._SongLeadUser;
			}
			set
			{
				if ((this._SongLeadUser != value))
				{
					this.OnSongLeadUserChanging(value);
					this.SendPropertyChanging();
					this._SongLeadUser = value;
					this.SendPropertyChanged("SongLeadUser");
					this.OnSongLeadUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongPosition", DbType="VarChar(50)")]
		public string SongPosition
		{
			get
			{
				return this._SongPosition;
			}
			set
			{
				if ((this._SongPosition != value))
				{
					this.OnSongPositionChanging(value);
					this.SendPropertyChanging();
					this._SongPosition = value;
					this.SendPropertyChanged("SongPosition");
					this.OnSongPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceUnavailable")]
	public partial class ServiceUnavailable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceId;
		
		private int _UserId;
		
		private string _Notes;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public ServiceUnavailable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceUsers")]
	public partial class ServiceUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceId;
		
		private int _UserId;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public ServiceUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Songs")]
	public partial class Song : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Title;
		
		private string _Artist;
		
		private string _Notes;
		
		private string _MP3;
		
		private string _Track;
		
		private string _PDF;
		
		private string _Lyrics;
		
		private int _Id;
		
		private int _ChurchId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArtistChanging(string value);
    partial void OnArtistChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMP3Changing(string value);
    partial void OnMP3Changed();
    partial void OnTrackChanging(string value);
    partial void OnTrackChanged();
    partial void OnPDFChanging(string value);
    partial void OnPDFChanged();
    partial void OnLyricsChanging(string value);
    partial void OnLyricsChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChurchIdChanging(int value);
    partial void OnChurchIdChanged();
    #endregion
		
		public Song()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artist", DbType="VarChar(100)")]
		public string Artist
		{
			get
			{
				return this._Artist;
			}
			set
			{
				if ((this._Artist != value))
				{
					this.OnArtistChanging(value);
					this.SendPropertyChanging();
					this._Artist = value;
					this.SendPropertyChanged("Artist");
					this.OnArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MP3", DbType="VarChar(100)")]
		public string MP3
		{
			get
			{
				return this._MP3;
			}
			set
			{
				if ((this._MP3 != value))
				{
					this.OnMP3Changing(value);
					this.SendPropertyChanging();
					this._MP3 = value;
					this.SendPropertyChanged("MP3");
					this.OnMP3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track", DbType="VarChar(100)")]
		public string Track
		{
			get
			{
				return this._Track;
			}
			set
			{
				if ((this._Track != value))
				{
					this.OnTrackChanging(value);
					this.SendPropertyChanging();
					this._Track = value;
					this.SendPropertyChanged("Track");
					this.OnTrackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDF", DbType="VarChar(100)")]
		public string PDF
		{
			get
			{
				return this._PDF;
			}
			set
			{
				if ((this._PDF != value))
				{
					this.OnPDFChanging(value);
					this.SendPropertyChanging();
					this._PDF = value;
					this.SendPropertyChanged("PDF");
					this.OnPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lyrics", DbType="VarChar(2500)")]
		public string Lyrics
		{
			get
			{
				return this._Lyrics;
			}
			set
			{
				if ((this._Lyrics != value))
				{
					this.OnLyricsChanging(value);
					this.SendPropertyChanging();
					this._Lyrics = value;
					this.SendPropertyChanged("Lyrics");
					this.OnLyricsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchId", DbType="Int NOT NULL")]
		public int ChurchId
		{
			get
			{
				return this._ChurchId;
			}
			set
			{
				if ((this._ChurchId != value))
				{
					this.OnChurchIdChanging(value);
					this.SendPropertyChanging();
					this._ChurchId = value;
					this.SendPropertyChanged("ChurchId");
					this.OnChurchIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SongsWishList")]
	public partial class SongsWishList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Status;
		
		private string _PType;
		
		private string _Title;
		
		private string _Artist;
		
		private string _Link;
		
		private string _Notes;
		
		private System.DateTime _DateRequested;
		
		private string _Requestor;
		
		private int _Id;
		
		private int _ChurchId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPTypeChanging(string value);
    partial void OnPTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArtistChanging(string value);
    partial void OnArtistChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateRequestedChanging(System.DateTime value);
    partial void OnDateRequestedChanged();
    partial void OnRequestorChanging(string value);
    partial void OnRequestorChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChurchIdChanging(int value);
    partial void OnChurchIdChanged();
    #endregion
		
		public SongsWishList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string PType
		{
			get
			{
				return this._PType;
			}
			set
			{
				if ((this._PType != value))
				{
					this.OnPTypeChanging(value);
					this.SendPropertyChanging();
					this._PType = value;
					this.SendPropertyChanged("PType");
					this.OnPTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artist", DbType="VarChar(100)")]
		public string Artist
		{
			get
			{
				return this._Artist;
			}
			set
			{
				if ((this._Artist != value))
				{
					this.OnArtistChanging(value);
					this.SendPropertyChanging();
					this._Artist = value;
					this.SendPropertyChanged("Artist");
					this.OnArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(100)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRequested", DbType="Date NOT NULL")]
		public System.DateTime DateRequested
		{
			get
			{
				return this._DateRequested;
			}
			set
			{
				if ((this._DateRequested != value))
				{
					this.OnDateRequestedChanging(value);
					this.SendPropertyChanging();
					this._DateRequested = value;
					this.SendPropertyChanged("DateRequested");
					this.OnDateRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requestor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Requestor
		{
			get
			{
				return this._Requestor;
			}
			set
			{
				if ((this._Requestor != value))
				{
					this.OnRequestorChanging(value);
					this.SendPropertyChanging();
					this._Requestor = value;
					this.SendPropertyChanged("Requestor");
					this.OnRequestorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchId", DbType="Int NOT NULL")]
		public int ChurchId
		{
			get
			{
				return this._ChurchId;
			}
			set
			{
				if ((this._ChurchId != value))
				{
					this.OnChurchIdChanging(value);
					this.SendPropertyChanging();
					this._ChurchId = value;
					this.SendPropertyChanged("ChurchId");
					this.OnChurchIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UName;
		
		private string _UPass;
		
		private int _USecLevel;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnUPassChanging(string value);
    partial void OnUPassChanged();
    partial void OnUSecLevelChanging(int value);
    partial void OnUSecLevelChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public UserLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPass", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string UPass
		{
			get
			{
				return this._UPass;
			}
			set
			{
				if ((this._UPass != value))
				{
					this.OnUPassChanging(value);
					this.SendPropertyChanging();
					this._UPass = value;
					this.SendPropertyChanged("UPass");
					this.OnUPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USecLevel", DbType="Int NOT NULL")]
		public int USecLevel
		{
			get
			{
				return this._USecLevel;
			}
			set
			{
				if ((this._USecLevel != value))
				{
					this.OnUSecLevelChanging(value);
					this.SendPropertyChanging();
					this._USecLevel = value;
					this.SendPropertyChanged("USecLevel");
					this.OnUSecLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UName;
		
		private string _FName;
		
		private string _LName;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Phone;
		
		private string _Email;
		
		private string _UGender;
		
		private string _UType;
		
		private bool _UVocalist;
		
		private string _UPosition;
		
		private bool _UPrimary;
		
		private string _UStatus;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private int _Id;
		
		private int _ChurchId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUGenderChanging(string value);
    partial void OnUGenderChanged();
    partial void OnUTypeChanging(string value);
    partial void OnUTypeChanged();
    partial void OnUVocalistChanging(bool value);
    partial void OnUVocalistChanged();
    partial void OnUPositionChanging(string value);
    partial void OnUPositionChanged();
    partial void OnUPrimaryChanging(bool value);
    partial void OnUPrimaryChanged();
    partial void OnUStatusChanging(string value);
    partial void OnUStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChurchIdChanging(int value);
    partial void OnChurchIdChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(5)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGender", DbType="VarChar(1)")]
		public string UGender
		{
			get
			{
				return this._UGender;
			}
			set
			{
				if ((this._UGender != value))
				{
					this.OnUGenderChanging(value);
					this.SendPropertyChanging();
					this._UGender = value;
					this.SendPropertyChanged("UGender");
					this.OnUGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UType
		{
			get
			{
				return this._UType;
			}
			set
			{
				if ((this._UType != value))
				{
					this.OnUTypeChanging(value);
					this.SendPropertyChanging();
					this._UType = value;
					this.SendPropertyChanged("UType");
					this.OnUTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UVocalist", DbType="Bit NOT NULL")]
		public bool UVocalist
		{
			get
			{
				return this._UVocalist;
			}
			set
			{
				if ((this._UVocalist != value))
				{
					this.OnUVocalistChanging(value);
					this.SendPropertyChanging();
					this._UVocalist = value;
					this.SendPropertyChanged("UVocalist");
					this.OnUVocalistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPosition", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UPosition
		{
			get
			{
				return this._UPosition;
			}
			set
			{
				if ((this._UPosition != value))
				{
					this.OnUPositionChanging(value);
					this.SendPropertyChanging();
					this._UPosition = value;
					this.SendPropertyChanged("UPosition");
					this.OnUPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPrimary", DbType="Bit NOT NULL")]
		public bool UPrimary
		{
			get
			{
				return this._UPrimary;
			}
			set
			{
				if ((this._UPrimary != value))
				{
					this.OnUPrimaryChanging(value);
					this.SendPropertyChanging();
					this._UPrimary = value;
					this.SendPropertyChanged("UPrimary");
					this.OnUPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UStatus", DbType="VarChar(1)")]
		public string UStatus
		{
			get
			{
				return this._UStatus;
			}
			set
			{
				if ((this._UStatus != value))
				{
					this.OnUStatusChanging(value);
					this.SendPropertyChanging();
					this._UStatus = value;
					this.SendPropertyChanged("UStatus");
					this.OnUStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchId", DbType="Int NOT NULL")]
		public int ChurchId
		{
			get
			{
				return this._ChurchId;
			}
			set
			{
				if ((this._ChurchId != value))
				{
					this.OnChurchIdChanging(value);
					this.SendPropertyChanging();
					this._ChurchId = value;
					this.SendPropertyChanged("ChurchId");
					this.OnChurchIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
